dependencies {

    /* Bean Mirror. */
    testCompile project(":bean-mirror-core")

    /* Test module, service provider. */
    testCompile project(":bean-mirror-tests:server")

    /* Test module, client with all access. */
    testCompile project(":bean-mirror-tests:server-unrestricted")

    /* Test module, client with no authorized access. */
    testCompile project(":bean-mirror-tests:client")

    /* Test runner. */
    testCompile "org.junit.platform:junit-platform-commons:$junitPlatformVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'


    /* Object mocking. */
    testCompile "org.mockito:mockito-core:$mockitoVersion"

}

ext.moduleName = 'com.github.elopteryx.reflect.tests'

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'junit',
                '--add-reads', "$moduleName=junit",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "com.github.elopteryx"
            artifactId "bean-mirror-tests-runner"

            from components.java
        }
    }
}
