dependencies {

    /* Bean Mirror. */
    testCompile project(":bean-mirror-core")

    /* Test module, service provider. */
    testCompile project(":bean-mirror-tests:server")

    /* Test module, open service provider. */
    testCompile project(":bean-mirror-tests:server-unrestricted")

    /* Test module, client for the servers. */
    testCompile project(":bean-mirror-tests:client")

    /* Performance benchmark tool. */
    testCompile "org.openjdk.jmh:jmh-core:$jmhVersion"
    testCompile "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"

    /* Test runner. */
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testRuntime "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
    testRuntime "org.junit.platform:junit-platform-runner:$junitPlatformVersion"

}

ext.moduleName = 'com.github.elopteryx.reflect.tests'

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "com.github.elopteryx"
            artifactId "bean-mirror-tests-runner"

            from components.java
        }
    }
}
